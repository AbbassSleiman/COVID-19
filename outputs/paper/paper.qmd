---
title: "My title"
subtitle: "My subtitle if needed"
author: 
  - First author
  - Another author
thanks: "Code and data are available at: LINK."
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(dplyr)
library(here)

raw_region_data <- read_csv(here("inputs/data/region_data.csv"))
cleaned_region_data <- read_csv(here("outputs/data/cleaned_region_data.csv"))
cleaned_test_score_data <- read_csv(here("outputs/data/cleaned_test_score_data.csv"))
```
\newpage
```{r}
#| echo: false
#| message: false

#### Workspace setup ####
library(tidyverse)
library(dplyr)
library(ggplot2)


#### Replication ####

# Calculate the number of days schools were closed for each country
days_closed_per_country <- cleaned_region_data |>
  group_by(region_name, country_name) |>
  summarize(days_closed = sum(covid_score > 1))

# Calculate the mean number of days closed for each region
mean_days_closed_per_region <- days_closed_per_country |>
  group_by(region_name) |>
  summarize(mean_days_closed = mean(days_closed))

# Sort regions in ascending order by mean_days_closed
mean_days_closed_per_region <- mean_days_closed_per_region |>
  arrange(mean_days_closed)

# Create a bar chart
ggplot(mean_days_closed_per_region, 
      aes(x = reorder(region_name, mean_days_closed), y = mean_days_closed)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  geom_text(aes(label = round(mean_days_closed)), vjust = -0.5, color = "black", size = 2.5) +
  labs(x = "Region", y = "Mean Days Closed") +
  scale_y_continuous(
    limits = c(0, 600),
    breaks = seq(0, 600, by = 100)
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


```

\newpage

```{r}
#| echo: false
#| message: false

#### Workspace setup ####
library(tidyverse)
library(dplyr)
library(ggplot2)
library(tidyr)

#### Replication ####

# Calculate the total number of enrollments overall
total_enrollment <- sum(cleaned_test_score_data$enrollment)

# Filter for Math
filtered_test_data <- cleaned_test_score_data |>
  filter(subject == "Math")

# Define in-person percent learning categories
inperson_group <- c("0-25", "25-50", "50-75", "75-100")

# Change data format into long format from wide format and categorize the in-person share
long_filtered_test_data <- filtered_test_data |>
  pivot_longer(cols = starts_with("change_"),
               names_to = "year_group",
               values_to = "change_in_pass_rate") |>
  mutate(inperson_category = cut(share_inperson, breaks = c(-Inf, 0.25, 0.5, 0.75, Inf), labels = inperson_group))

# Group by year and calculate summary statistics
summary_test_data <- long_filtered_test_data |>
  group_by(year_group, inperson_category) |>
  summarize(weighted_avg_change_pass = weighted.mean(change_in_pass_rate, 
                                                     w = enrollment/total_enrollment, 
                                                     na.rm = TRUE)) |>
  ungroup()

# Calculate the overall weighted average pass rate change
overall_summary_test_data <- long_filtered_test_data |>
  group_by(year_group) |>
  summarize(weighted_avg_change_pass = weighted.mean(change_in_pass_rate,
                                                     w = enrollment/total_enrollment,
                                                     na.rm = TRUE),
                                                     inperson_category = "Overall")

# Bind both sets of rows together
summary_test_data <- bind_rows(summary_test_data, overall_summary_test_data)

# Plot the resultant graph
ggplot(summary_test_data, aes(x = weighted_avg_change_pass * 100, y = inperson_category, color = year_group)) +
  geom_point(size = 3) + 
  geom_vline(xintercept = 0, color = "darkgrey") +
  scale_x_continuous(limits = c(-17, 3)) +
  scale_y_discrete(limits = c("75-100", "50-75", "25-50", "0-25", "Overall")) +
  labs(x = "Average Change in Pass Rate (Percentage Points)", y = "Percent In-Person",
       title = "Average Change in Pass Rate by Year in Math") +
  scale_color_discrete(labels = c("Spring 2018", "Spring 2019", "Spring 2021")) +
  labs(color = "Year Category") +
  theme_minimal()

```



\newpage

# References


